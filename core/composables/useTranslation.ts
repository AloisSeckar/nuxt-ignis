import lang from '@/i18n/locales/en.json'

/**
 * An adapter above `t` function from `i18n` module.
 *
 * This function is basically a shorthand for obtaining `i18n` translation in scripts.
 * In templates `$t` function is available, but in scripts we normally have to
 * access the `t` function via the instance of `$i18n` living inside current Nuxt App.
 *
 * Since $i18n is an optional dependency in Nuxt Ignis setup, this also gracefully handles
 * cases when user turns the module off while still using the translations in the code.
 *
 * @param key identifier of text that should be displayed
 * @returns translated text from i18n sources
 */
export function useT(key: string): string {
  if (useRuntimeConfig().public.ignis.i18n.enabled) {
    // i18n available => just use it
    return useNuxtApp().$i18n.t(key)
  } else {
    // backdoor for Nuxt Ignis to display values on demo index page
    const backdoorValue = useIgnisT(key)
    if (backdoorValue !== '???') {
      return backdoorValue
    }
    // for other custom values a warning will be produced and a placeholder will be returned
    log.warn('@nuxtjs/i18n turned off, translations are not available (set NUXT_PUBLIC_IGNIS_I18N=true)')
    return 'Translation not available'
  }
}

/**
 * Helper to search a value for given key in JSON lang file.
 *
 * Note: The core concept was AI-generated by ChatGPT.
 *
 * @param key identifier of text that should be displayed
 * @returns hardcoded text from '@/i18n/locales/en.json' of nuxt-ignis package (providing the key exists)
 */
export function useIgnisT(key: string): string {
  const keys = key.split('.')

  let currentLang = lang
  for (const currentKey of keys) {
    if (currentLang && currentKey in currentLang) {
      // @ts-expect-error TODO this should be fixed
      currentLang = currentLang[currentKey]
    } else {
      log.debug(`useIgnisT: string value not found for "${key}"`)
      return '???'
    }
  }

  if (typeof currentLang === 'string') {
    return currentLang
  }

  log.debug(`useIgnisT: string value not found for "${key}"`)
  log.debug(`useIgnisT: was resolved as:`)
  log.debug(JSON.stringify(currentLang))

  return '???'
}
